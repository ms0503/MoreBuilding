plugins {
    id 'idea'
	id 'maven-publish'
	alias libs.plugins.quilt.loom
    id 'com.modrinth.minotaur' version '2.+'
}

base {
	archivesName = project.archives_base_name
}

version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
    project {
        languageLevel = '17'
    }
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	// Loom and Loader both use this block in order to gather more information about your mod.
	mods {
		// This should match your mod id.
        morebuilding {
			// Tell Loom about each source set used by your mod here. This ensures that your mod's classes are properly transformed by Loader.
            sourceSet('main')
			// If you shade (directly include classes, not JiJ) a dependency into your mod, include it here using one of these methods:
            // dependency('com.example.shadowedmod:1.2.3')
            // configuration('exampleShadedConfigurationName')
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
    mappings variantOf(libs.quilt.mappings) {
        classifier 'intermediary-v2'
    }
	// Replace the above line with the block below if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	/*
	mappings loom.layered {
		mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
		officialMojangMappings()
	}
	*/
	modImplementation libs.quilt.loader

	// QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
	// Quilted Fabric API will automatically pull in the correct QSL version.
	modImplementation libs.quilted.fabric.api
	// modImplementation libs.bundles.quilted.fabric.api // If you wish to use Fabric API's deprecated modules, you can replace the above line with this one
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
        rename {
            "${it}_${base.archivesName.get()}"
        }
	}
}

java {
    withJavadocJar()
    withSourcesJar()
}

// Configure the maven publication
publishing {
	publications {
        MoreBuilding(MavenPublication) {
            from components.java
            afterEvaluate {
                groupId = 'ms.sora.mod'
                artifactId = 'morebuilding'
            }
            pom {
                description = 'The mod that adds many building blocks.'
                developers {
                    developer {
                        email = 'ms0503@outlook.com'
                        id = 'ms0503'
                        name = 'Sora Tonami'
                    }
                }
                licenses {
                    license {
                        distribution = 'repo'
                        name = 'MIT'
                        url = 'https://github.com/ms0503/more-building/blob/HEAD/LICENSE.md'
                    }
                }
                name = archives_base_name
                resolveStrategy = 1
                scm {
                    connection = 'scm:git:https://github.com/ms0503/more-building.git'
                    developerConnection = 'scm:git:https://github.com/ms0503/more-building.git'
                    url = 'https://github.com/ms0503/more-building'
                }
                url = 'https://github.com/ms0503/more-building'
            }
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
        maven {
            credentials {
                password = System.getenv('GITHUB_TOKEN')
                username = 'ms0503'
            }
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/ms0503/more-building'
        }
    }
}

modrinth {
    projectId = 'L2OB4eiS'
    uploadFile = remapJar
    gameVersions.add('1.20.1')
    loaders.add('quilt')
}
